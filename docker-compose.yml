version: '3'

services:
  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - sonarnet
    depends_on:
      - db
  
  db:
    image: postgres:13
    container_name: sonarqube_db
    environment:
    - POSTGRES_USER=sonar
    - POSTGRES_PASSWORD=sonar
    - POSTGRES_DB=sonar
    networks:
      - sonarnet
    volumes:
      - sonarqube_db_data:/var/lib/postgresql/data
  
  sonarscanner:
    image: sonarsource/sonar-scanner-cli:latest
    container_name: sonarscanner
    volumes:
      - .:/usr/src
    networks:
      - sonarnet
    entrypoint: [
      "bash", 
      "-c", 
      "sleep 30 && sonar-scanner \
        -Dsonar.projectKey=agnervillafabrega-technical-test-we-imagine \
        -Dsonar.sources=step-1/src \
        -Dsonar.tests=step-1/test \
        -Dsonar.test.inclusions='step-1/**/*.spec.ts,**/*.spec.tsx' \
        -Dsonar.javascript.lcov.reportPaths=step-1/coverage/lcov.info \
        -Dsonar.host.url=http://sonarqube:9000 \
        -Dsonar.login=sqa_1a95d0c9d82d72bee524734174cfe8a64c4dd929"
    ]

networks:
  sonarnet:
  
volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_db_data: